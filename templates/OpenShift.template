{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Template for setting up an OpenShift Origin environment",
  "Parameters"  : {
    "KeyName"   : {
      "Description"   : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type"          : "String",
      "MinLength"     : "1",
      "MaxLength"     : "64",
      "AllowedPattern": "[-_ a-zA-Z0-9]*"
    },
    "Prefix": {
      "Description"   : "Your DNS Prefix",
      "Type"          : "String",
      "Default"       : "example.com"
    },
    "DnsSecKey": {
      "Description"   : "Bind DNS-Sec TSIG key",
      "Type"          : "String",
    }
  },
  
  "Mappings" : {
    "JeosImages" : { 
      "Broker"  : { "Image" : "F18-x86_64-cfntools-openshift-origin-broker" },
      "Node"    : { "Image" : "F18-x86_64-cfntools-openshift-origin-node" },
    }
  },
  
  "Resources" : {
    "OpenShiftOriginSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Standard firewall rules",
        "SecurityGroupIngress" : [ 
          {
            "IpProtocol"  : "udp",
            "FromPort"    : "53",
            "ToPort"      : "53",
            "CidrIp"      : "0.0.0.0/0"
          },
          {
            "IpProtocol"  : "tcp",
            "FromPort"    : "22",
            "ToPort"      : "22",
            "CidrIp"      : "0.0.0.0/0"
          },
          {
            "IpProtocol"  : "tcp",
            "FromPort"    : "80",
            "ToPort"      : "80",
            "CidrIp"      : "0.0.0.0/0"
          },
          {
            "IpProtocol"  : "tcp",
            "FromPort"    : "443",
            "ToPort"      : "443",
            "CidrIp"      : "0.0.0.0/0"
          },
          {
            "IpProtocol"  : "tcp",
            "FromPort"    : "8000",
            "ToPort"      : "8000",
            "CidrIp"      : "0.0.0.0/0"
          },
          {
            "IpProtocol"  : "tcp",
            "FromPort"    : "8443",
            "ToPort"      : "8443",
            "CidrIp"      : "0.0.0.0/0"
          },
        ]
      }
    },
    
    "NodeInstance" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "BrokerInstance",
      "Properties" : {
        "ImageId"       : { "Fn::FindInMap" : [ "JeosImages", "Broker", "Image" ] },
        "InstanceType"  : "m1.medium",
        "KeyName"       : { "Ref" : "KeyName" },
        "SecurityGroups" : [ {"Ref" : "OpenShiftOriginSecurityGroup" } ],
        "Tags" : [ {"Key" : "Name", "Value" : { "Fn::Join" : ["-",["openshift", {"Ref":"Prefix"}, "broker"]]}}],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["",[
          "#!/bin/bash -x","\n",
          "cd ~/","\n",
          "cat<<EOF > ~/configure_broker.pp", "\n",
          "$node_fqdn='", { "Fn::GetAtt" : [ "NodeInstance" , "PublicDnsName" ] }, "'", "\n",
          "file { 'update network settings - hostname':", "\n",
          "  path    => '/etc/sysconfig/network,", "\n",
          "  content => \"NETWORKING=yes\\nNETWORKING_IPV6=no\\nHOSTNAME=", { "Fn::GetAtt" : [ "NodeInstance" , "PublicDnsName" ] }, "\"", "\n",
          "}", "\n",
          "exec { 'set hostname':", "\n",
          "  command => '/bin/hostname ", { "Fn::GetAtt" : [ "NodeInstance" , "PublicDnsName" ] }, "'", "\n",
          "}", "\n",
          "augeas{ 'network setup' :", "\n",
          "  context => '/files/etc/sysconfig/network-scripts/ifcfg-eth0',", "\n",
          "  changes => [", "\n",
          "    'set PEERDNS no',", "\n",
          "  ],", "\n",
          "}", "\n",
          "class { 'openshift_origin' :"
          "  node_fqdn                  => '", { "Fn::GetAtt" : [ "NodeInstance" , "PublicDnsName" ] }, "',", "\n",
          "  cloud_domain               => '", { "Ref" :  "Prefix" }, "',", "\n",
          "  named_tsig_priv_key        => '", { "Ref" :  "DnsSecKey" }, "',", "\n",
          "  dns_servers                => ['8.8.8.8'],", "\n",
          "  os_unmanaged_users         => ['ec2-user'],", "\n",
          "  enable_network_services    => true,", "\n",
          "  configure_firewall         => false,", "\n",
          "  configure_ntp              => true,", "\n",
          "  configure_activemq         => false,", "\n",
          "  configure_qpid             => false,", "\n",
          "  configure_mongodb          => false,", "\n",
          "  configure_named            => false,", "\n",
          "  configure_broker           => false,", "\n",
          "  configure_node             => true,", "\n",
          "  development_mode           => true,", "\n",
          "  named_ipaddress            => '", { "Fn::GetAtt" : [ "BrokerInstance" , "PublicIp" ] }, "',", "\n",
          "  mongodb_fqdn               => '", { "Fn::GetAtt" : [ "BrokerInstance" , "PublicDnsName" ] }, "',", "\n",
          "  mq_fqdn                    => '", { "Fn::GetAtt" : [ "BrokerInstance" , "PublicDnsName" ] }, "',", "\n",
          "  broker_fqdn                => '", { "Fn::GetAtt" : [ "BrokerInstance" , "PublicDnsName" ] }, "',", "\n",
          "}", "\n",
          "EOF", "\n",          
          "puppet module install openshift/openshift_origin", "\n",
          "puppet apply --verbose configure_broker.pp | tee /var/log/configure_openshift.log", "\n",
        ]]}}
      }
    },
    
    "BrokerInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId"       : { "Fn::FindInMap" : [ "JeosImages", "Broker", "Image" ] },
        "InstanceType"  : "m1.medium",
        "KeyName"       : { "Ref" : "KeyName" },
        "SecurityGroups" : [ {"Ref" : "OpenShiftOriginSecurityGroup" } ],
        "Tags" : [ {"Key" : "Name", "Value" : { "Fn::Join" : ["-",["openshift", {"Ref":"Prefix"}, "broker"]]}}],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["",[
          "#!/bin/bash -x","\n",
          "cd ~/","\n",
          "cat<<EOF > ~/configure_broker.pp", "\n",
          "$node_fqdn='", { "Fn::GetAtt" : [ "NodeInstance" , "PublicDnsName" ] }, "'", "\n",
          "file { 'update network settings - hostname':", "\n",
          "  path    => '/etc/sysconfig/network,", "\n",
          "  content => \"NETWORKING=yes\\nNETWORKING_IPV6=no\\nHOSTNAME=", { "Fn::GetAtt" : [ "BrokerInstance" , "PublicDnsName" ] }, "\"", "\n",
          "}", "\n",
          "exec { 'set hostname':", "\n",
          "  command => '/bin/hostname ", { "Fn::GetAtt" : [ "NodeInstance" , "PublicDnsName" ] }, "'", "\n",
          "}", "\n",
          "augeas{ 'network setup' :", "\n",
          "  context => '/files/etc/sysconfig/network-scripts/ifcfg-eth0',", "\n",
          "  changes => [", "\n",
          "    'set PEERDNS no',", "\n",
          "  ],", "\n",
          "}", "\n",
          "class { 'openshift_origin' :"
          "  node_fqdn                  => '", { "Fn::GetAtt" : [ "BrokerInstance" , "PublicDnsName" ] }, "',", "\n",
          "  cloud_domain               => '", { "Ref" :  "Prefix" }, "',", "\n",
          "  named_tsig_priv_key        => '", { "Ref" :  "DnsSecKey" }, "',", "\n",
          "  dns_servers                => ['8.8.8.8'],", "\n",
          "  os_unmanaged_users         => ['ec2-user'],", "\n",
          "  enable_network_services    => true,", "\n",
          "  configure_firewall         => false,", "\n",
          "  configure_ntp              => true,", "\n",
          "  configure_activemq         => true,", "\n",
          "  configure_qpid             => false,", "\n",
          "  configure_mongodb          => true,", "\n",
          "  configure_named            => true,", "\n",
          "  configure_broker           => true,", "\n",
          "  configure_node             => false,", "\n",
          "  development_mode           => true,", "\n",
          "  named_ipaddress            => '", { "Fn::GetAtt" : [ "BrokerInstance" , "PublicIp" ] }, "',", "\n",
          "  mongodb_fqdn               => '", { "Fn::GetAtt" : [ "BrokerInstance" , "PublicDnsName" ] }, "',", "\n",
          "  mq_fqdn                    => '", { "Fn::GetAtt" : [ "BrokerInstance" , "PublicDnsName" ] }, "',", "\n",
          "  broker_fqdn                => '", { "Fn::GetAtt" : [ "BrokerInstance" , "PublicDnsName" ] }, "',", "\n",
          "}", "\n",
          "EOF", "\n",          
          "puppet module install openshift/openshift_origin", "\n",
          "puppet apply --verbose configure_broker.pp | tee /var/log/configure_openshift.log", "\n",
        ]]}}
      }
    }
  }
}
